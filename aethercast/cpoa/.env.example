# Service URLs for CPOA to interact with other microservices
PSWA_SERVICE_URL=http://localhost:5004/weave_script
VFA_SERVICE_URL=http://localhost:5005/forge_voice
ASF_NOTIFICATION_URL=http://localhost:5006/asf/internal/notify_new_audio
ASF_WEBSOCKET_BASE_URL=ws://localhost:5006/api/v1/podcasts/stream
SCA_SERVICE_URL=http://localhost:5002/craft_snippet

# Internal URL for CPOA to send UI update messages to ASF
CPOA_ASF_SEND_UI_UPDATE_URL=http://localhost:5006/asf/internal/send_ui_update

# IGA - Image Generation Agent
IGA_SERVICE_URL=${IGA_SERVICE_URL_CONTAINER}

# TDA - Topic Discovery Agent (for landing page and search)
TDA_SERVICE_URL=${TDA_SERVICE_URL_CONTAINER}

# --- Database Configuration for CPOA (PostgreSQL only) ---
# CPOA's database interactions now exclusively use PostgreSQL.
# These variables should be sourced from a common.env file or set in the environment (e.g., by Docker Compose).
POSTGRES_HOST=${POSTGRES_HOST}
POSTGRES_PORT=${POSTGRES_PORT:-5432}
POSTGRES_USER=${POSTGRES_USER}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD} # Ensure this is securely managed
POSTGRES_DB=${POSTGRES_DB}

# Retry mechanism for calls to external services (PSWA, VFA, ASF, SCA, IGA, TDA)
CPOA_SERVICE_RETRY_COUNT=3
# Backoff factor for exponential backoff (e.g., 0.5 means sleep times: 0.5s, 1s, 2s for retries)
CPOA_SERVICE_RETRY_BACKOFF_FACTOR=0.5

# --- Polling Configuration for Async Sub-Tasks ---
# For PSWA tasks (script weaving)
CPOA_PSWA_POLLING_INTERVAL_SECONDS=5
CPOA_PSWA_POLLING_TIMEOUT_SECONDS=600 # 10 minutes, script generation can take time

# For VFA tasks (voice forging - if VFA becomes async and CPOA polls it)
CPOA_VFA_POLLING_INTERVAL_SECONDS=5
CPOA_VFA_POLLING_TIMEOUT_SECONDS=300 # 5 minutes

# For TDA NewsAPI tasks (if TDA's /discover_topics becomes fully async and CPOA polls it)
CPOA_TDA_POLLING_INTERVAL_SECONDS=5
CPOA_TDA_POLLING_TIMEOUT_SECONDS=180 # 3 minutes

# For IGA tasks (image generation)
CPOA_IGA_POLLING_INTERVAL_SECONDS=5
CPOA_IGA_POLLING_TIMEOUT_SECONDS=240 # 4 minutes, image generation can take time

# WCHA - Web Content Harvester Agent
WCHA_SERVICE_BASE_URL="http://wcha:5003" # Base URL for WCHA service
CPOA_WCHA_POLLING_INTERVAL_SECONDS=10
CPOA_WCHA_POLLING_TIMEOUT_SECONDS=300 # 5 minutes, web harvesting can be slow

# FLASK_DEBUG mode for CPOA (if it were a standalone Flask app) is not directly applicable here
# as CPOA's logic is imported into API Gateway. API Gateway's FLASK_DEBUG controls its environment.
# FLASK_DEBUG=True

# --- Celery Configuration for CPOA (if run as a service with its own workers) ---
CPOA_CELERY_BROKER_URL=redis://redis:6379/0
CPOA_CELERY_RESULT_BACKEND=redis://redis:6379/0

# --- Idempotency Configuration for CPOA's Own Orchestration Task ---
# These define the status strings and lock timeout CPOA uses for its own primary tasks'
# idempotency records in the shared 'idempotency_keys' table.
CPOA_IDEMPOTENCY_STATUS_PROCESSING="processing"
CPOA_IDEMPOTENCY_STATUS_COMPLETED="completed"
CPOA_IDEMPOTENCY_STATUS_FAILED="failed"
CPOA_IDEMPOTENCY_LOCK_TIMEOUT_SECONDS=3600 # Example: 1 hour for overall orchestration
