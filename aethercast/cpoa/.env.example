# Service URLs for CPOA to interact with other microservices
PSWA_SERVICE_URL=http://localhost:5004/weave_script
VFA_SERVICE_URL=http://localhost:5005/forge_voice
ASF_NOTIFICATION_URL=http://localhost:5006/asf/internal/notify_new_audio
ASF_WEBSOCKET_BASE_URL=ws://localhost:5006/api/v1/podcasts/stream
SCA_SERVICE_URL=http://localhost:5002/craft_snippet

# Internal URL for CPOA to send UI update messages to ASF
CPOA_ASF_SEND_UI_UPDATE_URL=http://localhost:5006/asf/internal/send_ui_update

# IGA - Image Generation Agent
IGA_SERVICE_URL=${IGA_SERVICE_URL_CONTAINER}

# TDA - Topic Discovery Agent (for landing page and search)
TDA_SERVICE_URL=${TDA_SERVICE_URL_CONTAINER}

# --- Database Configuration for CPOA ---
# Set DATABASE_TYPE to 'postgres' or 'sqlite'. Default is 'sqlite' in main.py.
# CPOA's database interactions (for _update_task_status_in_db, _save_snippet_to_db, _get_topic_details_from_db)
# will use these settings.
DATABASE_TYPE=sqlite

# For SQLite (if DATABASE_TYPE=sqlite)
# This path is the location *inside the container* where the shared DB volume is mounted.
# It references a variable that should be defined in a common.env file loaded by Docker Compose.
SHARED_DATABASE_PATH=${SHARED_DATABASE_PATH}

# For PostgreSQL (if DATABASE_TYPE=postgres)
# These should ideally be sourced from common.env or use defaults set in docker-compose
# when CPOA runs within the API Gateway container.
POSTGRES_HOST=${POSTGRES_HOST}
POSTGRES_PORT=${POSTGRES_PORT:-5432}
POSTGRES_USER=${POSTGRES_USER}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
POSTGRES_DB=${POSTGRES_DB}

# Retry mechanism for calls to external services (PSWA, VFA, ASF, SCA, IGA, TDA)
CPOA_SERVICE_RETRY_COUNT=3
# Backoff factor for exponential backoff (e.g., 0.5 means sleep times: 0.5s, 1s, 2s for retries)
CPOA_SERVICE_RETRY_BACKOFF_FACTOR=0.5

# --- Polling Configuration for Async Sub-Tasks ---
# For PSWA tasks (script weaving)
CPOA_PSWA_POLLING_INTERVAL_SECONDS=5
CPOA_PSWA_POLLING_TIMEOUT_SECONDS=600 # 10 minutes, script generation can take time

# For VFA tasks (voice forging - if VFA becomes async and CPOA polls it)
CPOA_VFA_POLLING_INTERVAL_SECONDS=5
CPOA_VFA_POLLING_TIMEOUT_SECONDS=300 # 5 minutes

# For TDA NewsAPI tasks (if TDA's /discover_topics becomes fully async and CPOA polls it)
CPOA_TDA_POLLING_INTERVAL_SECONDS=5
CPOA_TDA_POLLING_TIMEOUT_SECONDS=180 # 3 minutes

# For IGA tasks (image generation)
CPOA_IGA_POLLING_INTERVAL_SECONDS=5
CPOA_IGA_POLLING_TIMEOUT_SECONDS=240 # 4 minutes, image generation can take time

# WCHA - Web Content Harvester Agent (if called as a service for async content retrieval for a topic)
WCHA_ASYNC_CONTENT_URL=http://wcha:5003/v1/async_get_content_for_topic # Example, adjust if different
CPOA_WCHA_POLLING_INTERVAL_SECONDS=10
CPOA_WCHA_POLLING_TIMEOUT_SECONDS=300 # 5 minutes, web harvesting can be slow

# FLASK_DEBUG mode for CPOA (if it were a standalone Flask app) is not directly applicable here
# as CPOA's logic is imported into API Gateway. API Gateway's FLASK_DEBUG controls its environment.
# FLASK_DEBUG=True
