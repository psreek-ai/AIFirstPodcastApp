# --- Flask Server Settings ---
IGA_HOST=0.0.0.0
IGA_PORT=5007
# Debug mode is typically controlled by FLASK_DEBUG in common.env or the execution environment.
# Example: FLASK_DEBUG=true
# FLASK_DEBUG=false
# IGA_DEBUG_MODE=true # Service-specific debug mode, to be deprecated

# --- Google Cloud Project Configuration ---
# Path to GCP service account key JSON *inside the container* (e.g., /app/gcp-credentials.json).
# This file is used by the Google Cloud client libraries to authenticate and authorize API calls.
# It's required if Application Default Credentials (ADC) are not configured in the environment (e.g., local Docker).
# Place the actual gcp-credentials.json file (obtained from GCP IAM) in aethercast/iga/.
# See main README's GCP setup guide for details on creating and using service account keys.
GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json

# General GCP Project ID and Location, usually inherited from common.env.
# See main README's GCP setup guide for details on setting these up.
# GCP_PROJECT_ID=${GCP_PROJECT_ID}
# GCP_LOCATION=${GCP_LOCATION}

# --- Vertex AI Imagen Settings (IGA specific) ---
# Vertex AI Project ID: The Google Cloud Project ID where Vertex AI services (like Imagen model) are enabled and will be billed.
# Defaults to the general GCP_PROJECT_ID from common.env if not overridden here.
# Override here if IGA needs to use a Vertex AI service in a different GCP project.
IGA_VERTEXAI_PROJECT_ID=${GCP_PROJECT_ID:-your-gcp-project-id}

# Vertex AI Location: The Google Cloud region where the Vertex AI Imagen model is located and will be accessed from.
# Defaults to the general GCP_LOCATION from common.env if not overridden here.
# E.g., "us-central1".
IGA_VERTEXAI_LOCATION=${GCP_LOCATION:-us-central1}
IGA_VERTEXAI_IMAGE_MODEL_ID=imagegeneration@006 # Specific Vertex AI Imagen model identifier.

# --- Google Cloud Storage (GCS) Settings for IGA ---
# GCS_BUCKET_NAME: The name of the Google Cloud Storage bucket where IGA will store generated images.
# This bucket must be created in your GCP project before running the service.
# The service account (specified by GOOGLE_APPLICATION_CREDENTIALS or ADC) must have read/write permissions to this bucket.
# Often set in common.env and sourced here, or set directly if IGA uses a dedicated bucket.
GCS_BUCKET_NAME=${GCS_BUCKET_NAME:-your-aethercast-gcs-bucket-name-for-iga}

# IGA_GCS_IMAGE_PREFIX: Path prefix (folder structure) within the GCS_BUCKET_NAME for images generated by IGA.
# Helps organize files within the bucket. Example: "images/generated/iga/"
IGA_GCS_IMAGE_PREFIX=images/iga/

# --- IGA Image Generation Parameters ---
IGA_DEFAULT_ASPECT_RATIO=1:1 # e.g., 1:1, 16:9, 9:16
IGA_ADD_WATERMARK=true # Whether to request Google to add a watermark

# --- Local Directory for Temporary Files ---
# Local path for temporary image files before GCS upload (primary storage is GCS).
# Not typically needed as images are uploaded directly to GCS.
# IGA_GENERATED_IMAGE_DIR=/shared_audio/iga_images_temp # Example, if needed

# --- Celery Configuration ---
# URL for the Celery message broker (e.g., Redis)
CELERY_BROKER_URL=redis://redis:6379/0
# URL for the Celery result backend (e.g., Redis)
CELERY_RESULT_BACKEND=redis://redis:6379/0

# --- PostgreSQL Database for Idempotency ---
# Connection details for the PostgreSQL database used by IGA for storing idempotency keys.
# This should ideally point to a shared PostgreSQL instance used by other Aethercast services.
# Values can be sourced from common.env or set directly.
POSTGRES_HOST=${POSTGRES_HOST:-postgres_db}
POSTGRES_PORT=${POSTGRES_PORT:-5432}
POSTGRES_USER=${POSTGRES_USER:-your_db_user}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_db_password}
POSTGRES_DB=${POSTGRES_DB:-aethercast_db}

# IGA_POSTGRES_DB_URL: Consolidated PostgreSQL connection string.
# If provided, this URL takes precedence over the individual host/user/db/password variables for IGA's DB connection.
# Format: postgresql://<USER>:<PASSWORD>@<HOST>:<PORT>/<DB_NAME>
# Example: IGA_POSTGRES_DB_URL=postgresql://user:pass@localhost:5432/aethercast_db
# If commented out or not set, IGA will try to use the individual POSTGRES_ variables above.
IGA_POSTGRES_DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# --- Idempotency Configuration for IGA ---
IGA_IDEMPOTENCY_STATUS_PROCESSING="processing"
IGA_IDEMPOTENCY_STATUS_COMPLETED="completed"
IGA_IDEMPOTENCY_STATUS_FAILED="failed"
IGA_IDEMPOTENCY_LOCK_TIMEOUT_SECONDS=3600 # 1 hour (e.g., for long image generation tasks)
