# --- AIMS_TTS Service Configuration ---
# URL for the AIMS_TTS (AI Model TTS Service) - ensure this matches the AIMS_TTS service configuration.
# Example: http://aims_tts_service:9000/v1/synthesize
# When using Docker Compose, this should ideally use the AIMS_TTS_SERVICE_URL_CONTAINER from common.env:
AIMS_TTS_SERVICE_URL=${AIMS_TTS_SERVICE_URL_CONTAINER}

# Timeout in seconds for requests to the AIMS_TTS service
AIMS_TTS_REQUEST_TIMEOUT_SECONDS=120

# --- VFA Behavior Configuration ---
# VFA_SHARED_AUDIO_DIR: Directory where VFA test mode saves dummy audio files.
# If AIMS_TTS returns paths on a shared volume, VFA would need read access to that volume.
# This variable is primarily for test mode's dummy file generation now.
# When running with Docker Compose, this could reference ${SHARED_AUDIO_DIR_CONTAINER}/vfa_test_dummies
VFA_SHARED_AUDIO_DIR=${SHARED_AUDIO_DIR_CONTAINER}/vfa_test_files

# VFA_MIN_SCRIPT_LENGTH: Minimum character length of a script to attempt audio generation.
VFA_MIN_SCRIPT_LENGTH=20

# --- Test Mode for Integration Testing ---
# VFA_TEST_MODE_ENABLED: Set to 'true' to bypass actual AIMS_TTS calls and create a dummy audio file.
# Recommended for integration tests to avoid external dependencies and costs.
VFA_TEST_MODE_ENABLED=true

# --- Flask App Parameters ---
# VFA_HOST=0.0.0.0
# VFA_PORT=5005
# Debug mode is typically controlled by FLASK_DEBUG in common.env or the execution environment.
# Example: FLASK_DEBUG=true
# FLASK_DEBUG=false
# VFA_DEBUG_MODE=True # Service-specific debug mode, to be deprecated

# --- Removed Google Cloud TTS Specific Variables ---
# GOOGLE_APPLICATION_CREDENTIALS is now managed by AIMS_TTS service.
# VFA_TTS_VOICE_NAME, VFA_TTS_LANG_CODE, VFA_TTS_AUDIO_ENCODING,
# VFA_TTS_DEFAULT_SPEAKING_RATE, VFA_TTS_DEFAULT_PITCH are effectively
# now request parameters that VFA sends to AIMS_TTS, which has its own defaults.
# VFA will pass through voice_params from CPOA to AIMS_TTS.

# --- AIMS_TTS Polling Configuration (VFA polls AIMS_TTS tasks) ---
AIMS_TTS_POLLING_INTERVAL_SECONDS=3
AIMS_TTS_POLLING_TIMEOUT_SECONDS=180

# --- Celery Configuration (for VFA to run its own tasks) ---
# URL for the Celery message broker (e.g., Redis)
CELERY_BROKER_URL=redis://redis:6379/0
# URL for the Celery result backend (e.g., Redis)
CELERY_RESULT_BACKEND=redis://redis:6379/0

# PostgreSQL Database Configuration (for Idempotency)
# These should ideally point to a shared PostgreSQL instance.
# Values can be sourced from common.env or set directly.
POSTGRES_HOST=${POSTGRES_HOST:-postgres_db}
POSTGRES_PORT=${POSTGRES_PORT:-5432}
POSTGRES_USER=${POSTGRES_USER:-your_db_user}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_db_password}
POSTGRES_DB=${POSTGRES_DB:-aethercast_db}
# Consolidated URL for PostgreSQL, derived from the above
VFA_POSTGRES_DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# --- Idempotency Configuration for VFA ---
VFA_IDEMPOTENCY_STATUS_PROCESSING="processing"
VFA_IDEMPOTENCY_STATUS_COMPLETED="completed"
VFA_IDEMPOTENCY_STATUS_FAILED="failed"
VFA_IDEMPOTENCY_LOCK_TIMEOUT_SECONDS=300 # 5 minutes, adjust as needed for voice forging tasks
