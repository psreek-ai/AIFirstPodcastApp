# TDA_NEWS_API_KEY: Your API key for NewsAPI.org or chosen news provider. (Required if USE_REAL_NEWS_API=true)
# For integration tests without external calls, leave this blank if USE_REAL_NEWS_API is false.
TDA_NEWS_API_KEY=your_news_api_key_here

# TDA_NEWS_API_BASE_URL: Base URL for the news API.
TDA_NEWS_API_BASE_URL=https://newsapi.org/v2/

# TDA_NEWS_API_ENDPOINT: Specific endpoint to use (e.g., 'everything', 'top-headlines').
TDA_NEWS_API_ENDPOINT=everything

# TDA_NEWS_DEFAULT_KEYWORDS: Comma-separated list of default keywords for topic discovery.
TDA_NEWS_DEFAULT_KEYWORDS=AI,technology,science,innovation

# TDA_NEWS_DEFAULT_LANGUAGE: Default language for news articles (e.g., 'en', 'de').
TDA_NEWS_DEFAULT_LANGUAGE=en

# USE_REAL_NEWS_API: Set to 'true' to use the real News API, 'false' for simulated data.
# For integration tests, 'false' is recommended to avoid external dependencies.
USE_REAL_NEWS_API=false

# TDA_NEWS_PAGE_SIZE: Number of articles to fetch from the news API per request.
TDA_NEWS_PAGE_SIZE=25

# TDA_NEWS_REQUEST_TIMEOUT: Timeout in seconds for requests to the news API.
TDA_NEWS_REQUEST_TIMEOUT=15

# TDA_NEWS_USER_AGENT: User-Agent string for HTTP requests made by TDA.
TDA_NEWS_USER_AGENT=AethercastTopicDiscovery/0.1

# --- Database Configuration ---
# Set DATABASE_TYPE to 'postgres' or 'sqlite'. Default is 'sqlite'.
DATABASE_TYPE=sqlite

# For SQLite (if DATABASE_TYPE=sqlite)
# This path is the location *inside the container* where the shared DB volume is mounted if using SQLite.
# It references a variable that should be defined in a common.env file loaded by Docker Compose.
SHARED_DATABASE_PATH=${SHARED_DATABASE_PATH}

# For PostgreSQL (if DATABASE_TYPE=postgres)
# These should ideally be sourced from common.env or use defaults set in docker-compose.
POSTGRES_HOST=postgres_db
POSTGRES_PORT=5432
POSTGRES_USER=${POSTGRES_USER}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
POSTGRES_DB=${POSTGRES_DB}


# Flask app parameters (TDA runs on port 5000 by default in docker-compose.yml)
# Explicit TDA configuration is preferred:
# TDA_HOST=0.0.0.0
# TDA_PORT=5000
# TDA_DEBUG_MODE=True
# Alternatively, Flask's generic environment variables can be used if TDA_HOST/PORT/DEBUG_MODE are not set:
# FLASK_RUN_HOST=0.0.0.0
# Port for standalone execution (Docker uses port mapping defined in docker-compose.yml)
# FLASK_RUN_PORT=5000 # TDA_PORT is used by main.py now
# FLASK_DEBUG=True # TDA_DEBUG_MODE is used by main.py now

# --- Celery Configuration (for TDA to run its own NewsAPI tasks) ---
# URL for the Celery message broker (e.g., Redis)
CELERY_BROKER_URL=redis://redis:6379/0
# URL for the Celery result backend (e.g., Redis)
CELERY_RESULT_BACKEND=redis://redis:6379/0

# --- NewsAPI Sub-Task Polling Configuration (used by discover_topics_task) ---
# Polling interval in seconds when TDA's main task waits for NewsAPI sub-task
TDA_NEWSAPI_POLLING_INTERVAL_SECONDS=5
# Overall timeout in seconds for TDA's main task to poll NewsAPI sub-task
TDA_NEWSAPI_POLLING_TIMEOUT_SECONDS=120
