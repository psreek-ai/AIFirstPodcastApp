# TDA_NEWS_API_KEY: Your API key for NewsAPI.org or chosen news provider. (Required if USE_REAL_NEWS_API=true)
# For integration tests without external calls, leave this blank if USE_REAL_NEWS_API is false.
TDA_NEWS_API_KEY=your_news_api_key_here

# TDA_NEWS_API_BASE_URL: Base URL for the news API.
TDA_NEWS_API_BASE_URL=https://newsapi.org/v2/

# TDA_NEWS_API_ENDPOINT: Specific endpoint to use (e.g., 'everything', 'top-headlines').
TDA_NEWS_API_ENDPOINT=everything

# TDA_NEWS_DEFAULT_KEYWORDS: Comma-separated list of default keywords for topic discovery.
TDA_NEWS_DEFAULT_KEYWORDS=AI,technology,science,innovation

# TDA_NEWS_DEFAULT_LANGUAGE: Default language for news articles (e.g., 'en', 'de').
TDA_NEWS_DEFAULT_LANGUAGE=en

# USE_REAL_NEWS_API: Set to 'true' to use the real News API, 'false' for simulated data.
# For integration tests, 'false' is recommended to avoid external dependencies.
USE_REAL_NEWS_API=false

# TDA_NEWS_PAGE_SIZE: Number of articles to fetch from the news API per request.
TDA_NEWS_PAGE_SIZE=25

# TDA_NEWS_REQUEST_TIMEOUT: Timeout in seconds for requests to the news API.
TDA_NEWS_REQUEST_TIMEOUT=15

# TDA_NEWS_USER_AGENT: User-Agent string for HTTP requests made by TDA.
TDA_NEWS_USER_AGENT=AethercastTopicDiscovery/0.1

# --- Database Configuration (PostgreSQL only) ---
# TDA now exclusively uses PostgreSQL.
# These variables should be sourced from a common.env file or set in the environment (e.g., by Docker Compose).
POSTGRES_HOST=${POSTGRES_HOST:-postgres_db}
POSTGRES_PORT=${POSTGRES_PORT:-5432}
POSTGRES_USER=${POSTGRES_USER:-your_db_user}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_db_password}
POSTGRES_DB=${POSTGRES_DB:-aethercast_db}


# Flask app parameters (TDA runs on port 5000 by default in docker-compose.yml)
TDA_HOST=0.0.0.0
TDA_PORT=5000
TDA_DEBUG_MODE=True
# FLASK_DEBUG can also be used if set in common.env

# --- Celery Configuration (for TDA to run its own NewsAPI tasks) ---
# URL for the Celery message broker (e.g., Redis)
CELERY_BROKER_URL=redis://redis:6379/0
# URL for the Celery result backend (e.g., Redis)
CELERY_RESULT_BACKEND=redis://redis:6379/0

# --- NewsAPI Sub-Task Polling Configuration (used by discover_topics_task) ---
# Polling interval in seconds when TDA's main task waits for NewsAPI sub-task
TDA_NEWSAPI_POLLING_INTERVAL_SECONDS=5
# Overall timeout in seconds for TDA's main task to poll NewsAPI sub-task
TDA_NEWSAPI_POLLING_TIMEOUT_SECONDS=120

# --- Idempotency Configuration for TDA ---
TDA_IDEMPOTENCY_STATUS_PROCESSING="processing"
TDA_IDEMPOTENCY_STATUS_COMPLETED="completed"
TDA_IDEMPOTENCY_STATUS_FAILED="failed"
TDA_IDEMPOTENCY_LOCK_TIMEOUT_SECONDS=1800 # 30 minutes (topic discovery might involve chained tasks)
